version: "3.8"

volumes:
  rabbitmq_data:

services:
 ###################################
  # AMQP: AMQP Setup
  ###################################
#  amqp_setup:
#    build:
#      context: ./
#      dockerfile: amqp_setup.Dockerfile
#    image: jianchengzhou/amqp_setup:esd
#    restart: always
#    environment:
#      dbURL: mysql+mysqlconnector://root@localhost:3306/order
#      PYTHONUNBUFFERED: 1
 
  ###################################
  # Order: The Order microservice
  ###################################
  order:
    build:
      context: ./
      dockerfile: order.Dockerfile
    image: jianchengzhou/order:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://root@localhost:3306/order
      PYTHONUNBUFFERED: 1
 
  #######################################################
  # Business: Business User microservice
  #######################################################
  business:
    build:
      context: ./
      dockerfile: business.Dockerfile
    image: jianchengzhou/business:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://root@localhost:3306/business
      PYTHONUNBUFFERED: 1

  ####################################
  # RabbitMQ: The messaging broker   
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq

  ###################################
  # Customer: CX microservice
  ###################################
  customer:
    build:
      context: ./
      dockerfile: customer.Dockerfile
    image: jianchengzhou/customer:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://root@localhost:3306/customer
      PYTHONUNBUFFERED: 1
  
  ###################################
  # Product: Product microservice
  ###################################
  product:
    build:
      context: ./
      dockerfile: product.Dockerfile
    image: jianchengzhou/product:esd
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://root@localhost:3306/product
      PYTHONUNBUFFERED: 1


  
  #################################################
  # Activity Log: The Activity Log microservice
  #################################################
  activity_log:
    build:
      context: ./
      dockerfile: activity_log.Dockerfile
    image: jianchengzhou/activity_log:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      dbURL: mysql+mysqlconnector://root@localhost:3306/activity
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ###################################
  # Error: The Error microservice
  ###################################
  error:
    build:
      context: ./
      dockerfile: error.Dockerfile
    image: jianchengzhou/error:esd
    restart: always
    depends_on:
      - rabbitmq
    environment:
      dbURL: mysql+mysqlconnector://root@localhost:3306/error
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ##################################
  # Business Upload Product: Upload Product microservice
  ##################################
  product_listing:
    build:
      context: ./
      dockerfile: product_listing.Dockerfile
    image: jianchengzhou/product_listing:esd
    restart: always
    depends_on:
     - order
     - activity_log
     - error
     - product
     - business
     - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      order_URL: http://localhost:5002/order
      business_URL: http://localhost:5004/business
      product_URL: http://localhost:5001/product 
      PYTHONUNBUFFERED: 1
    ports:
      - "5500:5500"
     #random number i put in
        
  ###############################################
  # Place Order: The Place Order microservice
  ###############################################
  place_order:
    build:
      context: ./
      dockerfile: place_order.Dockerfile
    image: jianchengzhou/place_order:esd
    restart: always
    depends_on:
      - order
      - customer
      - product
      - activity_log
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      product_URL: http://localhost:5001/product
      order_URL: http://localhost:5002/order
      customer_URL: http://localhost:5003/customer
      PYTHONUNBUFFERED: 1
    ports:
      - "5200:5200"

  ##################################
  # Customer Check Order: cx Check microservice
  ##################################
  check_order_cust:
    build:
      context: ./
      dockerfile: check_order_cust.Dockerfile
    image: jianchengzhou/check_order_cust:esd
    restart: always
    depends_on:
      - order
      - activity_log
      - error
      - product
      - customer
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      product_URL: http://localhost:5001/product
      order_URL: http://localhost:5002/order
      customer_URL: http://localhost:5003/customer
      PYTHONUNBUFFERED: 1
    ports:
      - "5300:5300"
      #random number i put in

   ##################################
  # Biz Check Order: Biz Check microservice
  ##################################
  check_order_biz:
    build:
      context: ./
      dockerfile:  check_order_biz.Dockerfile
    image: jianchengzhou/check_order_biz:esd
    restart: always
    depends_on:
      - order
      - activity_log
      - error
      - product
      - business
      - customer
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      product_URL: http://localhost:5001/product
      order_URL: http://localhost:5002/order
      customer_URL: http://localhost:5003/customer
      business_URL: http://localhost:5004/business
      PYTHONUNBUFFERED: 1
    ports:
      - "5100:5100"
      #random number i put in    
  ###############################################
  # Fulfil Order: Business Fulfill Order microservice
  ###############################################
  fulfill_order:
    build:
      context: ./
      dockerfile: fulfill_order.Dockerfile
    image: jianchengzhou/fulfill_order:esd
    restart: always
    depends_on:
      - order
      - activity_log
      - error
      - business
      - check_order_biz
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      order_URL: http://localhost:5002/order
      business_URL: http://localhost:5004/business
      product_URL: http://localhost:5001/product
      PYTHONUNBUFFERED: 1
    ports:
      - "5400:5400"
  ###############################################
  # Fulfil Order: Business Fulfill Order microservice
  ###############################################
#  main:
#    build:
#      context: ./
#      dockerfile: main.Dockerfile
#    image: jianchengzhou/main:esd
#    restart: always
#    depends_on:
#      - product
#      - activity_log
#      - error
#      - business
#      - customer
#      - check_order_biz
#      - check_order_cust
#      - rabbitmq
#    environment:
#      rabbit_host: rabbitmq
#      rabbit_port: 5672
#      product_URL: http://localhost:5001/product
#      business_URL: http://localhost:5004/business
#      customer_URL: http://localhost:5003/customer
#      check_order_biz_URL: http://localhost:5100/check_order_biz
#      check_order_cus_URL: http://localhost:5300/check_order_cust
#      PYTHONUNBUFFERED: 1
#    ports:
#      - "5000:5000"   